// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require_tree .

window.UserNag = {
  ticketsNagged: [],
  nag: function(e){
    // e.stopImmediatePropagation();
    var card = new SW.Card();

    if(e.data) {
      // Single ticket
      UserNag.nagTicket(e.data).then(function(){
          Materialize.toast('Ticket nagged.', 3000);
      });
    } else {
      // All tickets in "waiting" state
      card.services('helpdesk').request('tickets', {status: 'open'}).then(function(t){
        var ticketList = t['tickets'];
        var promises = [];
        for(var i=0; i < ticketList.length; i++){
          var tick = ticketList[i];
          if(tick['status'] == 'waiting') {
            promises.push(UserNag.nagTicket(tick['id']));
          }
        }
        Promise.all(promises).then(function(){
          Materialize.toast('' + UserNag.ticketsNagged.length + ' tickets successfully nagged.', 4500);
          UserNag.ticketsNagged = [];
        });
      });
    }
  },
  nagTicket: function(ticketId){
    var card = new SW.Card();
    return card.services('helpdesk').request('comment:create', ticketId, {
      public: true,
      body: 'Just a quick reminder that we need a little more info from you on this issue.\nWhen you get a chance, please give us an update so we can continue to help with this issue.\nThanks!'
    }).then(function(d){
      UserNag.ticketsNagged.push(ticketId);
    }, function(e){
      Materialize.toast('Unable to send nag for ticket #' + ticketId + '.', 3000);
    });
  }
};
$('document').ready(function() {
  var card = new SW.Card();
  card.onActivate(function(envData) {
    UserNag.env = envData;
    $('#auid').val(envData['app_host']['auid']);
    UserNag.site = envData['app_host']['auid'];
  });
  $('#send_nags').on('click', window.UserNag.nag);
  card.services('helpdesk').on('showTicket', function(ticketId) {
    $('#send_nag').on('click', ticketId, UserNag.nag);
  });
});
